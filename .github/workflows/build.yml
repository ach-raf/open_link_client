name: Build and Release APK

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "19"

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper

      - name: Build Project
        run: ./gradlew assembleRelease

      # Print the contents of the directory to verify APK existence and location
      - name: List Directory Contents
        run: ls -R

      - name: Get Version Information
        id: get_version
        run: |
          echo "version_information=$(./gradlew -q printVersionInformation | tr -dc '[:alnum:]-.')" >> $GITHUB_ENV
          echo "version_tag=v$(./gradlew -q printVersionInformation | tr -dc '[:alnum:]-.' | sed 's/\./-/g')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version_tag }}
          release_name: Release ${{ env.version_information }}
          draft: false
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # Adjust the path based on the actual directory structure of the project
          asset_path: app/release/*.apk
          asset_name: OpenLinkClient-${{ env.version_information }}.apk
          asset_content_type: application/vnd.android.package-archive
