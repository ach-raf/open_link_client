name: Build and Release APK

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "19"

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Build Project
        run: ./gradlew assembleRelease

      - name: Extract App Name and Version Name
        id: extract_names
        run: |
          APP_NAME=$(grep -oP '(?<=publicRealm").\*(?=")' app/build.gradle | tr . _)
          VERSION_NAME=$(grep -oP '(?<=versionName \").\*(?=\")' app/build.gradle)
          echo "::set-output name=app_name::$APP_NAME"
          echo "::set-output name=version_name::$VERSION_NAME"

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload APK to Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/${{ steps.extract_names.outputs.app_name }}-${{ steps.extract_names.outputs.version_name }}.apk
          asset_name: ${{ steps.extract_names.outputs.app_name }}-${{ steps.extract_names.outputs.version_name }}.apk
          asset_content_type: application/vnd.android.package-archive
