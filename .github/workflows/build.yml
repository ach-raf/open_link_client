name: Build and Deploy APK

on:
  push:
    branches: [master]

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "19"

      - name: Make Gradlew executable
        run: chmod +x ./gradlew

      - name: Build APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: app/build/outputs/apk/debug/app-debug.apk

  deploy:
    name: Deploy APK
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: app

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: newtag
          release_name: Automatic Release
          draft: false
          prerelease: false

      - name: Upload APK to Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/app-debug.apk
          asset_name: OpenLinkClient-${{ steps.get-version.outputs.version }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Get Version
        id: get-version
        run: echo "::set-output name=version::$(./gradlew :printVersionInformation --quiet --no-daemon | sed -n 2p | cut -d' ' -f2 | sed 's/(//' | sed 's/)//')"
